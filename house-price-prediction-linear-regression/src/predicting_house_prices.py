# -*- coding: utf-8 -*-
"""Predicting House Prices.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/10fS1jgm9BdNEbVRpL1ywhasGOLVOD9q-
"""

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score
import numpy as np
from sklearn.preprocessing import StandardScaler
import matplotlib.pyplot as plt

df = pd.read_csv('HousingData.csv')
print(df.describe().T)

df.isna().sum()

columns = ["CRIM","ZN","INDUS","CHAS","AGE","LSTAT"]
for col in columns:
  df[col] = df[col].fillna(df[col].mean())

df.isna().sum()

X = df.drop("MEDV",axis=1)
y = df["MEDV"]

X_train , X_test , y_train , y_test = train_test_split(X,y,test_size=0.2,random_state=42)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

model = LinearRegression()
model.fit(X_train_scaled,y_train)

y_pred = model.predict(X_test_scaled)
print("Prediction:", y_pred)

print("RÂ²:", r2_score(y_test, y_pred))
print("MAE:", mean_absolute_error(y_test, y_pred))
print("RMSE:", np.sqrt(mean_squared_error(y_test, y_pred)))

plt.scatter(y_test, y_pred)
plt.xlabel("Actual Values")
plt.ylabel("Predicted Values")
plt.title("Actual vs. Predicted Values")
lims = [min(y_test.min(), y_pred.min()), max(y_test.max(), y_pred.max())]
plt.plot(lims, lims, 'r--', label="Ideal line (y=x)")

plt.show()